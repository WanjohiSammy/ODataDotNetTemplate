{
  "$schema": "https://json.schemastore.org/template",
  "author": "Microsoft",
  "classifications": [
    "OData",
    "Web",
    "API",
    "ODataSample",
    "Service",
    "Web API"
  ],
  "name": "OData ASP.NET Core Web Api Template",
  "generatorVersions": "[1.0.0.0-*)",
  "description": "A project template for creating a RESTful Web API using AspNetCore OData controllers, with optional support for OpenAPI and other OData settings like System Query Options and OData Batching.",
  "groupIdentity": "Microsoft.AspNetCoreOData.WebApiTemplate",
  "precedence": "90",
  "identity": "Microsoft.AspNetCoreOData.WebApiTemplate.9.0",
  "shortName": "odata-webapi",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "ODataWebApi.WebApplication1",
  "defaultName": "ODataWebApplication1",
  "preferNameDirectory": true,
  "symbols": {
    "Framework": {
      "type": "parameter",
      "description": "The target framework for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net9.0",
          "description": "Target net9.0"
        }
      ],
      "defaultValue": "net9.0",
      "replaces": "net9.0"
    },
    "ODataQueryOptions": {
      "type": "parameter",
      "datatype": "choice",
      "description": "OData System Query Options.",
      "allowMultipleValues": true,
      "enableQuotelessLiterals": true,
      "choices": [
        {
          "choice": "filter",
          "description": "Enable $filter query option",
          "displayName": "$filter"
        },
        {
          "choice": "select",
          "description": "Enable $select query option",
          "displayName": "$select"
        },
        {
          "choice": "expand",
          "description": "Enable $expand query option",
          "displayName": "$expand"
        },
        {
          "choice": "orderby",
          "description": "Enable $orderby query option",
          "displayName": "$orderby"
        },
        {
          "choice": "count",
          "description": "Enable $count query option",
          "displayName": "$count"
        }
      ],
      "defaultValue": "filter|select|expand|orderby|count"
    },
    "IsQueryOptionAll": {
      "type": "computed",
      "value": "(ODataQueryOptions == 'filter' && ODataQueryOptions == 'select' && ODataQueryOptions == 'expand' && ODataQueryOptions == 'orderby' && ODataQueryOptions == 'count')"
    },
    "IsQueryOptionFilter": {
      "type": "computed",
      "value": "(ODataQueryOptions == 'filter' || ODataQueryOptions == 'filter|select|expand|orderby|count')"
    },
    "IsQueryOptionSelect": {
      "type": "computed",
      "value": "(ODataQueryOptions == 'select' || ODataQueryOptions == 'filter|select|expand|orderby|count')"
    },
    "IsQueryOptionExpand": {
      "type": "computed",
      "value": "(ODataQueryOptions == 'expand' || ODataQueryOptions == 'filter|select|expand|orderby|count')"
    },
    "IsQueryOptionOrderby": {
      "type": "computed",
      "value": "(ODataQueryOptions == 'orderby' || ODataQueryOptions == 'filter|select|expand|orderby|count')"
    },
    "IsQueryOptionCount": {
      "type": "computed",
      "value": "(ODataQueryOptions == 'count' || ODataQueryOptions == 'filter|select|expand|orderby|count')"
    },
    "EnableNoDollarQueryOptions": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Whether or not the OData system query options should be prefixed with '$'",
      "defaultValue": "true"
    },
    "EnableCaseInsensitive": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Enable case insensitive for the controller/action/property name in conventional routing",
      "defaultValue": "true"
    },
    "EnableDefaultODataBatch": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Allowing OData batching",
      "defaultValue": "false"
    },
    "ConfigureHttps": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Configure HTTPS"
    },
    "CopyrightYear": {
      "type": "generated",
      "generator": "now",
      "replaces": "copyrightYear",
      "parameters": {
        "format": "yyyy"
      }
    },
    "EnableOpenAPI": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Enable OpenAPI (Swagger) support"
    },
    "UseProgramMain": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Do not use _top-level statements",
      "description": "Whether to generate an explicit Program class and Main method instead of top-level statements."
    },
    "ExcludeLaunchSettings": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to exclude launchSettings.json in the generated template."
    },
    "kestrelHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTP endpoint in launchSettings.json."
    },
    "kestrelHttpPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 5000,
        "high": 5300
      }
    },
    "kestrelHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpPort",
        "fallbackVariableName": "kestrelHttpPortGenerated"
      },
      "replaces": "5007"
    },
    "kestrelHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter ConfigureHttps is used."
    },
    "kestrelHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 7000,
        "high": 7300
      }
    },
    "kestrelHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpsPort",
        "fallbackVariableName": "kestrelHttpsPortGenerated"
      },
      "replaces": "5008"
    },
    "iisHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTP endpoint in launchSettings.json."
    },
    "iisHttpPortGenerated": {
      "type": "generated",
      "generator": "port"
    },
    "iisHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpPort",
        "fallbackVariableName": "iisHttpPortGenerated"
      },
      "replaces": "8080"
    },
    "iisHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter ConfigureHttps is used."
    },
    "iisHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 44300,
        "high": 44399
      }
    },
    "iisHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpsPort",
        "fallbackVariableName": "iisHttpsPortGenerated"
      },
      "replaces": "44300"
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(windir == 'C:\\Windows')",
          "exclude": [
            "Properties/launchSettings.json"
          ]
        },
        {
          "condition": "(ExcludeLaunchSettings)",
          "exclude": [
            "Properties/launchSettings.json"
          ]
        },
        {
          "condition": "(!UseProgramMain)",
          "exclude": [
            "Program.Main.cs"
          ]
        },
        {
          "condition": "(UseProgramMain)",
          "exclude": [
            "Program.cs"
          ],
          "rename": {
            "Program.Main.cs": "Program.cs"
          }
        }
      ]
    }
  ],
  "primaryOutputs": [
    {
      "path": "ODataWebApi.WebApplication1.csproj"
    }
  ],
  "postActions": [
    {
      "id": "restore",
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ]
}

